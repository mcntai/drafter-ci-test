run-name: Deploy to ${{ github.ref_name }}

on:
  push:
    branches: [ sandbox, main, develop ]
permissions:
  contents: read
env:
  NODE_ENV: ${{ github.ref_name == 'main' && 'live' || github.ref_name == 'develop' && 'dev' || github.ref_name == 'sandbox' && 'sandbox' }}
  DOTENV_PATH: ".env.${{ github.ref_name == 'main' && 'live' || github.ref_name == 'develop' && 'dev' || github.ref_name == 'sandbox' && 'sandbox' }}"


jobs:
  deploy:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    environment: ${{ github.ref_name == 'main' && 'live' || github.ref_name == 'develop' && 'dev' || github.ref_name == 'sandbox' && 'sandbox' }}
    permissions:
      contents: write
      pull-requests: write
    outputs:
      api-deployment: ${{ steps.api-deployment.outputs.success }}
      db-deployment: ${{ steps.db-deployment.outputs.success }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
          cache: 'yarn'
      - name: NPM Login
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
      - name: Cache dependencies
        uses: actions/cache@v3
        id: caching-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_ENV }}-node-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.caching-dependencies.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1
        with:
          file_name: app/.env
          envkey_NODE_ENV: ${{ env.NODE_ENV }}
          envkey_TEST: ${{ secrets.TEST_SECRET }}
          envkey_TEST_VAR: ${{ vars.TEST_VAR }}

      - name: Make script envfile
        uses: canastro/copy-file-action@master
        with:
          source: "./app/.env"
          target: ${{ env.DOTENV_PATH }}

      - name: Check variables
        run: |
          echo "1 $NODE_ENV"
          echo "2 $DOTENV_NAME"
          echo "3 ${{ secrets.TEST_SECRET }}"
          echo "4 ${{ vars.TEST_VAR }}"
      - name: Build
        id: api-deployment
        run: |
          echo "success=true" >> "$GITHUB_OUTPUT"
      - name: Deploy DB
        id: db-deployment
        run: |
          echo "success=true" >> "$GITHUB_OUTPUT"
      - name: Deploy files
        if: env.NODE_ENV == 'sandbox'
        id: files-deployment
        run: |
          echo ${{ env.NODE_ENV }}
          echo $NODE_ENV
          yarn start

  release:
    permissions:
      contents: write
      pull-requests: write
    if: |
      always() &&
      needs.deploy.outputs.api-deployment == 'true' && needs.deploy.outputs.db-deployment == 'true'
    needs:
      - deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
          cache: 'yarn'
      - name: Cache dependencies
        uses: actions/cache@v3
        id: caching-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
      - name: Install dependencies
        if: steps.caching-dependencies.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile
      - name: Check Vars
        run: |
          echo ${{ needs.deploy.outputs.api-deployment }}
          echo ${{ needs.deploy.outputs.db-deployment }}
      - name: Release
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



